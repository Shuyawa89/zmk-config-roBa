#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W         &kp E             &kp R             &kp T                                                                 &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&mt LEFT_CONTROL A  &kp S         &kp D             &kp F             &kp G                 &kp LG(LS(LC(NUMBER_4)))      &kp F12           &kp H        &kp J  &kp K      &lt 4 L  &kp ENTER
&mt LEFT_SHIFT Z    &kp X         &kp C             &kp V             &kp B                 &kp LG(SPACE)                 &lt 6 LG(LS(A))   &kp N        &kp M  &kp COMMA  &kp DOT  &kp LS(ENTER)
&kp LCTRL           &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 2 LANGUAGE_2  &mt LEFT_SHIFT SPACE  &kp BACKSPACE                 &lt 3 LANGUAGE_1  &lt 1 SPACE                             &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp GRAVE    &kp AMPERSAND    &kp ASTERISK  &kp LESS_THAN  &kp GREATER_THAN                          &kp SLASH          &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS     &kp EQUAL
&kp TAB      &kp DOLLAR       &kp PERCENT   &kp CARET      &kp UNDER         &trans          &trans  &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS      &kp SEMICOLON
&kp LS(TAB)  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH       &kp PIPE          &trans          &trans  &kp SQT            &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp QUESTION  &kp COLON
&trans       &trans           &trans        &trans         &trans            &kp DELETE      &trans  &trans                                                                        &kp UNDERSCORE
            >;
        };

        NUM {
            bindings = <
&kp ESCAPE                  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                       &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp TAB                     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &bootloader      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &trans           &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans           &trans          &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp F9  &kp F10  &kp F11  &kp F12  &trans                      &kp LA(LEFT_ARROW)  &kp LA(DOWN_ARROW)  &kp LA(UP_ARROW)  &kp LA(RIGHT_ARROW)  &kp LC(J)
&kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans      &trans  &kp LEFT_ARROW      &kp DOWN_ARROW      &kp UP_ARROW      &kp RIGHT_ARROW      &kp LC(K)
&kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans      &trans  &kp LC(LEFT_ARROW)  &kp LC(DOWN_ARROW)  &kp LC(UP_ARROW)  &kp LC(RIGHT_ARROW)  &kp LC(L)
&trans  &trans   &trans   &trans   &trans  &trans      &trans  &trans                                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                             &trans    &trans       &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp LG(T)      &mkp MB3  &mkp MB1     &mkp MB2  &trans  &mo 5
&trans  &trans  &trans  &trans  &trans  &trans      &kp LG(LS(T))  &mkp MB4  &kp LC(TAB)  &mkp MB5  &trans  &kp LG(W)
&trans  &trans  &trans  &trans  &trans  &trans      &trans         &trans                                   &kp LG(LS(W))
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
